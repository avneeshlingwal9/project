/* https: //bennettfeely.com/clippy/ */
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
body{

    background-color: #111;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh; /* As without it, by default flex container only takes height as much its content takes and so when we see align-items to center it does not work, cause the height of body is only 500px, same as the height of the container, so by default setting the body to take full height of the page, we are making sure that the items align at the center. */
    

}
.container{
    background-color: #444;

    height: 500px;
    width: 500px;
    position: relative;
}

.clip{
    position: absolute;
    /* So, having absolute position relative to the container. */
    top: 0 ;
    left: 0;

    height: 100%;
    width: 100%;
    transition: all 0.5s;

}
.clip1{
    background-image: url(https://www.cnet.com/a/img/resize/ea66ddc9276eef2884da221adc70ed1cf1545951/hub/2021/10/16/11804578-0dbc-42af-bcd1-3bc7b1394962/the-batman-2022-teaser-poster-batman-01-promo.jpg?auto=webp&fit=crop&height=675&width=1200);
    background-size: cover;
    background-position: center;
    clip-path: polygon(0 0,
        46% 0,
        39% 100%,
        0 100%);
        /*Basically clipping that much amount of part of the image, as defined by the polygon. */

}
.clip2{
    background-image: url(https://imageio.forbes.com/blogs-images/scottmendelson/files/2016/03/bvs.0-1200x801.jpg?format=jpg&width=1440);
    background-size: cover;
    background-position: center;
clip-path: polygon(19% 0, 87% 0, 64% 100%, 33% 100%);

}
.clip3{
    background-image: url(https://images4.alphacoders.com/290/thumb-1920-290378.jpg);
    background-size: cover;
    background-position: center;
    clip-path: polygon(82% 0, 100% 0, 100% 100%, 63% 100%);
}

.container:hover .clip{
    clip-path: polygon(100% 0 , 100% 0 , 100% 100% , 100% 100%); }
    
    /*So, this one necessarily forces the clip or image to dissapear when hovered over the container, as due to it, as we hover over a particular clip, the other clips dissappear, as their clip path is set to this, and only the image with hover has its clip-path overriden and all others path remains as hidden.*/

    /*
    Observe that when we hover over the container, we hover over all the clips, so all have their clip path property set to hidden, but at that time the clip:hover also becomes active, so we are at a particular clip, from the three, so its clip-path is (overriden)set to take over the full space. And if we remove the above container:hover property, then when we hover over a particular clip, it is still set to 100%, but not visible because as images are absolute and stacked upon top of each other, so all are taking full space, but just not visible to us and when hovering over clip1 image, its space is 100%, but that is not visible, because the images above it are in their default clipped stage and are not dissappearing, we can also use z-index. Similarly with image2 and image3 takes up full space, because it is at the top. 

    
    */

.container .clip:hover{
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
   /*  z-index : 10 , not as smooth as original. */
} 