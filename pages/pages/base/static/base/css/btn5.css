*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
.container{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: black;
}
a{
    background-color: white;
    border-radius: 100px;
    text-transform: uppercase;
    padding: 1rem 4rem;
    text-decoration: none;
    color: black;
    transition: all 0.5s;
    position: absolute;
    /* So, the positioned child will reference the absolute positioned element or relative position parent.*/
}
a:before{
    content: "";
    position: absolute;
    top: 0;
    left : 0;
    width: 100%;
    height: 100%;
    background: white;
    border-radius: 100px;
    z-index: -1;
    transition: all 1s;
}

a:hover:before{
    transform: scale(1.2);
    /*When hovered over the anchor tag, scale it up and using opacity we are actually making it kind of transparent. */
    opacity: 0;

}
a:hover{
    transform: translateY(0);
    /*So, the a:hover:before is below a, so anything applied to it, does not work. So, the transform: forces browser to recalculate everything, which then also applies the transform in a:hover:before.  */
    /*box-shadow: height width blur spread color*/
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);

}
a:active{
    transform: translateY(0);
    box-shadow: 0 5px 10px black;

}